input AggregateCommandInfo {
	id: String!
	version: Int!
}

enum EnabledCommand {
	CreateGameField
}

enum CommandStatus {
	VALID
	INVALID
}

type CommandValidatorResponse {
	message: String!
	status: CommandStatus!
	errorAsJson: String
	pushedCommandInfo: String
}

input CreateGameField {
	id: String!
	fieldName: String!
	fieldType: GameFieldType!
	minPlayers: Int!
	maxPlayers: Int!
	status: GameFieldStatus!
}

type GameField {
	id: ID!
	version: Int
	name: String!
	fieldType: GameFieldType!
	maxPlayers: Int!
	minPlayers: Int!
	status: GameFieldStatus!
}

enum GameFieldStatus {
	DISABLED
	ENABLED
	DELETED
}

enum GameFieldType {
	FOOTBALL
	TENNIS
	BASKETBALL
}

type Mutation {
	createGameField(__commandName: EnabledCommand = "CreateGameField", payload: CreateGameField!): CommandValidatorResponse!
}

type Query {
	getGameField(id: ID!): GameField
}